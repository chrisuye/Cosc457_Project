/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harri
 */
public class Main extends javax.swing.JFrame {
    
    private int study_ID = 0;
    private static CurrentTime time = new CurrentTime();
    private static ArrayList<Students> students = new ArrayList<Students>();
    private static ArrayList<Tutor> tutor = new ArrayList<Tutor>();
    private static ArrayList<Tutee> tutee = new ArrayList<Tutee>();
    private static ArrayList<TuoPresent> tuoPresent = new ArrayList<TuoPresent>();
    private static ArrayList<TuoPresent> tuoSign = new ArrayList<TuoPresent>();
    private static ArrayList<TuePresent> tuePresent = new ArrayList<TuePresent>();
    private static ArrayList<Taking> taking = new ArrayList<Taking>();
    
    /**
     * Creates new form Login
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        logIn = new javax.swing.JButton();
        studentInput = new javax.swing.JTextField();
        logOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        groupNum = new javax.swing.JTextField();
        logoutStudy = new javax.swing.JButton();
        loginStudy = new javax.swing.JButton();
        queryBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 200));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 700, 20));
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 680, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tutoring Center");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 100));

        logIn.setBackground(new java.awt.Color(255, 255, 255));
        logIn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        logIn.setForeground(new java.awt.Color(255, 255, 255));
        logIn.setText("Login");
        logIn.setBorder(null);
        logIn.setContentAreaFilled(false);
        logIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInActionPerformed(evt);
            }
        });
        jPanel3.add(logIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 130, 40));

        studentInput.setForeground(new java.awt.Color(102, 102, 102));
        studentInput.setBorder(null);
        studentInput.setOpaque(false);
        studentInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentInputFocusGained(evt);
            }
        });
        studentInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentInputActionPerformed(evt);
            }
        });
        jPanel3.add(studentInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 190, 30));

        logOut.setBackground(new java.awt.Color(255, 255, 255));
        logOut.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        logOut.setForeground(new java.awt.Color(255, 255, 255));
        logOut.setText("Logout");
        logOut.setBorder(null);
        logOut.setContentAreaFilled(false);
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        jPanel3.add(logOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 130, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 280, 260));

        groupNum.setForeground(new java.awt.Color(102, 102, 102));
        groupNum.setBorder(null);
        groupNum.setOpaque(false);
        groupNum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                groupNumFocusGained(evt);
            }
        });
        groupNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupNumActionPerformed(evt);
            }
        });
        jPanel3.add(groupNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 190, 30));

        logoutStudy.setBackground(new java.awt.Color(255, 255, 255));
        logoutStudy.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        logoutStudy.setForeground(new java.awt.Color(255, 255, 255));
        logoutStudy.setText("Logout Study");
        logoutStudy.setBorder(null);
        logoutStudy.setContentAreaFilled(false);
        logoutStudy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutStudyActionPerformed(evt);
            }
        });
        jPanel3.add(logoutStudy, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 170, 40));

        loginStudy.setBackground(new java.awt.Color(255, 255, 255));
        loginStudy.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        loginStudy.setForeground(new java.awt.Color(255, 255, 255));
        loginStudy.setText("Login Study");
        loginStudy.setBorder(null);
        loginStudy.setContentAreaFilled(false);
        loginStudy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginStudyActionPerformed(evt);
            }
        });
        jPanel3.add(loginStudy, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 170, 40));

        queryBtn.setText("Query");
        queryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryBtnActionPerformed(evt);
            }
        });
        jPanel3.add(queryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 170, 120));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 21, 690, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInActionPerformed
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        
        String towsonID = studentInput.getText();
        boolean checkLog = true;
        boolean pCheck = true;
        students.clear();
        tuePresent.clear();
        tuoPresent.clear();
        tutor.clear();
        tutee.clear();
        taking.clear();
        String Sid = "1";
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null,e);
        }
       
        final String ID = "cseyou1";
        final String PW = "Cosc*ymfw";
        final String SERVER = "jdbc:mysql://triton.towson.edu:3360/?serverTimezone=EST#/cseyou1db";
        
        try
        {
            
            Connection con = DriverManager.getConnection(SERVER,ID,PW);
            Statement stmt = con.createStatement();
            
            ResultSet rs = stmt.executeQuery("SELECT * FROM cseyou1db.Students");
            
            
            while(rs.next()){
                String TUID = rs.getString("TU_ID");
                String Lname = rs.getString("Lname");
                String Fname = rs.getString("Fname");
                
                students.add(new Students(TUID,Lname,Fname));
            }
            
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Tutor");
            while(rs.next()){
                String TUID = rs.getString("Tutor_ID");
                
                tutor.add(new Tutor(TUID));
            }
            
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Tutee");
            while(rs.next()){
                String TUID = rs.getString("Tutee_ID");
                
                tutee.add(new Tutee(TUID));
            }
            
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Tutor_Present");
            while(rs.next()){
                String fName = rs.getString("FtuoName");
                String lName = rs.getString("LtuoName");
                
                tuoPresent.add(new TuoPresent(fName,lName));
            }
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Tutee_Present");
            while(rs.next()){
                String fName = rs.getString("FtueName");
                String lName = rs.getString("LtueName");
                
                tuePresent.add(new TuePresent(fName,lName));
            }
            
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Taking");
            while(rs.next()){
                String cNum = rs.getString("CMNum");
                String cTID = rs.getString("TUE_ID");
                
                taking.add(new Taking(cNum,cTID));
            }
           
           
           
            for(Students stu: students){
                
                
                    if(stu.checkID(towsonID)){
                        for(Tutor tu: tutor){
                            if(tu.checkID(towsonID) && checkLog){
                                for(TuoPresent tP: tuoPresent){

                                    if(tP.checkName(stu.getFirst(), stu.getLast())){
                                        pCheck = false;
                                        break;
                                    }

                                }
                                if(pCheck){
                                    stmt.executeUpdate("INSERT INTO cseyou1db.Tutor_Present VALUES ('"+stu.getFirst()+"', '"+stu.getLast()+"')");
                                }
                                stmt.executeUpdate("INSERT INTO cseyou1db.TutorStime VALUES ('"+stu.getFirst()+"', '"+stu.getLast()+"', '"+time.getDate()+"', '"+time.getTime()+"')");
                                stmt.executeUpdate("INSERT INTO cseyou1db.Tutor_signin VALUES ('"+towsonID+"', '"+stu.getFirst()+"', '"+stu.getLast()+"')");
                                model.addRow(new Object[]{stu.getFirst(),stu.getLast(),"Tutor"});
                                JOptionPane.showMessageDialog(null,"Welcome Tutor: "+ stu.getFirst(),"Successful Login",JOptionPane.PLAIN_MESSAGE);
                                checkLog = false;
                                break;
                            }
                        }
                        for(Tutee to: tutee){
                            if(to.checkID(towsonID) && checkLog){
                                for(Taking t: taking){
                                    if(t.checkId(towsonID)){
                                        Sid = t.getSid(towsonID);
                                    }
                                }
                                for(TuePresent tP: tuePresent){

                                    if(tP.checkName(stu.getFirst(), stu.getLast())){
                                        pCheck = false;
                                        break;
                                    }

                                }
                                if(pCheck){
                                stmt.executeUpdate("INSERT INTO cseyou1db.Tutee_Present VALUES ('"+stu.getLast()+"', '"+stu.getFirst()+"', '"+Sid+"')");
                                }
                                stmt.executeUpdate("INSERT INTO cseyou1db.Tutee_signin VALUES ('"+towsonID+"', '"+stu.getLast()+"', '"+stu.getFirst()+"')");
                                stmt.executeUpdate("INSERT INTO cseyou1db.TuteeStime VALUES ('"+stu.getLast()+"', '"+stu.getFirst()+"', '"+time.getDate()+"', '"+time.getTime()+"')");
                                JOptionPane.showMessageDialog(null,"Welcome Tutee: "+ stu.getFirst(),"Successful Login",JOptionPane.PLAIN_MESSAGE);
                                model.addRow(new Object[]{stu.getFirst(),stu.getLast(),"Tutee"});
                                checkLog = false;
                                break;
                            }
                        }

                    }
                
            }
            
            if(checkLog){
                JOptionPane.showMessageDialog(null,"Invalid Towson ID","Unsuccessful Login",JOptionPane.ERROR_MESSAGE);
            }
            
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_logInActionPerformed

    private void studentInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentInputFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_studentInputFocusGained

    private void studentInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentInputActionPerformed
        studentInput.setText("");
    }//GEN-LAST:event_studentInputActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        String towsonID = studentInput.getText();
        boolean checkLog = true;
        students.clear();
        tuePresent.clear();
        tuoPresent.clear();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null,e);
        }
       
        final String ID = "cseyou1";
        final String PW = "Cosc*ymfw";
        final String SERVER = "jdbc:mysql://triton.towson.edu:3360/?serverTimezone=EST#/cseyou1db";
        
        try
        {
            
            Connection con = DriverManager.getConnection(SERVER,ID,PW);
            Statement stmt = con.createStatement();
            
            ResultSet rs = stmt.executeQuery("SELECT * FROM cseyou1db.Students");
            
            
            while(rs.next()){
                String TUID = rs.getString("TU_ID");
                String Lname = rs.getString("Lname");
                String Fname = rs.getString("Fname");
                
                students.add(new Students(TUID,Lname,Fname));
            }
            
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Tutor_Present");
            while(rs.next()){
                String Fname = rs.getString("FtuoName");
                String Lname = rs.getString("LtuoName");
                
                tuoPresent.add(new TuoPresent(Fname,Lname));
            }
            
            rs = stmt.executeQuery("SELECT * FROM cseyou1db.Tutee_Present");
            while(rs.next()){
                String Fname = rs.getString("FtueName");
                String Lname = rs.getString("LtueName");
                
                tuePresent.add(new TuePresent(Fname,Lname));
            }
            
            for(Students stu: students){
                if(stu.checkID(towsonID)){
                    for(TuoPresent tu: tuoPresent){
                        if(tu.checkName(stu.getFirst(),stu.getLast()) && checkLog){
                            stmt.executeUpdate("DELETE FROM cseyou1db.Tutor_signin WHERE TooID='"+towsonID+"' AND FTutor='"+stu.getFirst()+"' AND LTutor='"+stu.getLast()+"'");
                            
                            stmt.executeUpdate("INSERT INTO cseyou1db.TutorEtime VALUES ('"+stu.getFirst()+"', '"+stu.getLast()+"', '"+time.getDate()+"', '"+time.getTime()+"')");
                            JOptionPane.showMessageDialog(null,"Tutor: "+ stu.getFirst(),"Successful Logout",JOptionPane.PLAIN_MESSAGE);
                            checkLog = false;
                            break;
                        }
                    }
                    
                    for(TuePresent tu: tuePresent){
                        if(tu.checkName(stu.getFirst(),stu.getLast()) && checkLog){
                            stmt.executeUpdate("DELETE FROM cseyou1db.Tutee_signin WHERE tute_ID='"+towsonID+"' AND FtuesignName='"+stu.getFirst()+"' AND LtuesignName='"+stu.getLast()+"'");
                            
                            stmt.executeUpdate("INSERT INTO cseyou1db.TuteeEtime VALUES ('"+stu.getLast()+"', '"+stu.getFirst()+"', '"+time.getDate()+"', '"+time.getTime()+"')");
                            JOptionPane.showMessageDialog(null,"Tutor: "+ stu.getFirst(),"Successful Logout",JOptionPane.PLAIN_MESSAGE);
                            checkLog = false;
                            break;
                        }
                    }
                }
            }
            
            if(checkLog){
                JOptionPane.showMessageDialog(null,"Invalid Towson ID or User not Login","Unsuccessful Logout",JOptionPane.ERROR_MESSAGE);
            }
            
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_logOutActionPerformed

    private void groupNumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_groupNumFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_groupNumFocusGained

    private void groupNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupNumActionPerformed
        groupNum.setText("");
    }//GEN-LAST:event_groupNumActionPerformed

    private void logoutStudyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutStudyActionPerformed
        ArrayList<String> studyGroup = new ArrayList<String>();
        String groupID = groupNum.getText();
        boolean checkLog = true;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null,e);
        }
       
        final String ID = "cseyou1";
        final String PW = "Cosc*ymfw";
        final String SERVER = "jdbc:mysql://triton.towson.edu:3360/?serverTimezone=EST#/cseyou1db";
        try
        {
            
            Connection con = DriverManager.getConnection(SERVER,ID,PW);
            Statement stmt = con.createStatement();
            
            ResultSet rs = stmt.executeQuery("SELECT * FROM cseyou1db.Study");
            
            
            while(rs.next()){
                String sNum = rs.getString("StudyID");
                
                studyGroup.add(sNum);
            }
            
            for(String i: studyGroup){
                if(i.equals(groupID) && checkLog){
                    
                        
                            
                    stmt.executeUpdate("INSERT INTO cseyou1db.Study_Etime VALUES ('"+i+"', '"+time.getDate()+"', '"+time.getTime()+"')");
                    JOptionPane.showMessageDialog(null,"Study Group: "+ i,"Successful Logout",JOptionPane.PLAIN_MESSAGE);
                    checkLog = false;
                    break;
                        
                    
                }
            }
            
            if(checkLog){
                JOptionPane.showMessageDialog(null,"Invalid Group Number or Group is Logout","Unsuccessful Logout",JOptionPane.ERROR_MESSAGE);
            }
            
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_logoutStudyActionPerformed

    private void loginStudyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginStudyActionPerformed
        ArrayList<String> studyGroup = new ArrayList<String>();
        String groupID = groupNum.getText();
        boolean checkLog = true;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null,e);
        }
       
        final String ID = "cseyou1";
        final String PW = "Cosc*ymfw";
        final String SERVER = "jdbc:mysql://triton.towson.edu:3360/?serverTimezone=EST#/cseyou1db";
        try
        {
            
            Connection con = DriverManager.getConnection(SERVER,ID,PW);
            Statement stmt = con.createStatement();
            
            ResultSet rs = stmt.executeQuery("SELECT * FROM cseyou1db.Study");
            
            
            while(rs.next()){
                String sNum = rs.getString("StudyID");
                
                studyGroup.add(sNum);
            }
            
            for(String i: studyGroup){
                if(i.equals(groupID) && checkLog){
                    
                        
                            
                    stmt.executeUpdate("INSERT INTO cseyou1db.Study_Stime VALUES ('"+i+"', '"+time.getDate()+"', '"+time.getTime()+"')");
                    JOptionPane.showMessageDialog(null,"Study Group: "+ i,"Successful LogIn",JOptionPane.PLAIN_MESSAGE);
                    checkLog = false;
                    break;
                        
                    
                }
            }
            
            if(checkLog){
                JOptionPane.showMessageDialog(null,"Invalid Group Number or Group is Login","Unsuccessful Login",JOptionPane.ERROR_MESSAGE);
            }
            
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_loginStudyActionPerformed

    private void queryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryBtnActionPerformed
        new Table().setVisible(true);
        dispose();
    }//GEN-LAST:event_queryBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField groupNum;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logIn;
    private javax.swing.JButton logOut;
    private javax.swing.JButton loginStudy;
    private javax.swing.JButton logoutStudy;
    private javax.swing.JButton queryBtn;
    private javax.swing.JTextField studentInput;
    // End of variables declaration//GEN-END:variables
}
